services:

  postgres:
    image: tensorchord/pgvecto-rs:pg16-v0.2.1

    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword

    volumes:
      - postgres-data:/var/lib/postgresql/data

    ports:
      - 5432:5432

    healthcheck:
      test: "pg_isready -U myuser -d mydb"
      interval: 5s
      timeout: 1s
      retries: 10
      start_period: 10s

  app:
    build: .
    volumes:
      - .:/workspace
      - app-cache:/root/.cache
      - /home/rti/tmp/wikidata-20240514/wikidata-20240514.json:/wikidata.json

    ports:
      - 8787:8787

    # GPU access for ROCm (AMD)
    devices:
      - /dev/dri:/dev/dri
      - /dev/kfd:/dev/kfd

    depends_on:
      postgres:
        condition: service_healthy


  # scheduler:
  #   image: ghcr.io/dask/dask:latest
  #   hostname: scheduler
  #   ports:
  #     - "8786:8786"
  #     - "8787:8787"
  #   command: ["dask-scheduler"]
  #   volumes:
  #     - /home/rti/tmp/wikidata-20240514/wikidata-20240514.json:/home/rti/tmp/wikidata-20240514/wikidata-20240514.json
  #
  # worker:
  #   image: ghcr.io/dask/dask:latest
  #   command: ["dask-worker", "tcp://scheduler:8786"]
  #   # For Docker swarm you can specify multiple workers, this is ignored by `docker-compose up`
  #   deploy:
  #     replicas: 8
  #   volumes:
  #     - /home/rti/tmp/wikidata-20240514/wikidata-20240514.json:/home/rti/tmp/wikidata-20240514/wikidata-20240514.json
  #
  # notebook:
  #   image: ghcr.io/dask/dask-notebook:latest
  #   ports:
  #     - "8888:8888"
  #   environment:
  #     - DASK_SCHEDULER_ADDRESS="tcp://scheduler:8786"
  #   volumes:
  #     - /home/rti/tmp/wikidata-20240514/wikidata-20240514.json:/home/rti/tmp/wikidata-20240514/wikidata-20240514.json

volumes:
  app-cache:
  postgres-data:
